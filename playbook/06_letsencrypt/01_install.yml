- name: Generate an OpenSSL private key for applications
  community.crypto.openssl_privatekey:
      path: "/etc/letsencrypt/keys/{{ parent_item.host }}.key"
      type: RSA
      size: 4096

- name: Generate an OpenSSL Certificate Signing Request
  community.crypto.openssl_csr:
      path: "/etc/letsencrypt/csrs/{{ parent_item.host }}.csr"
      privatekey_path: "/etc/letsencrypt/keys/{{ parent_item.host }}.key"
      common_name: "{{ parent_item.host }}"

- name: Create a challenge for the domain using a account key file
  community.crypto.acme_certificate:
      acme_directory: "{{ acme_directory }}"
      acme_version: "{{ acme_version }}"
      account_key_src: "{{ letsencrypt_account_key }}"
      csr: "/etc/letsencrypt/csrs/{{ parent_item.host }}.csr"
      dest: "/etc/letsencrypt/certs/{{ parent_item.host }}.crt"
      fullchain_dest: "/etc/letsencrypt/certs/{{ parent_item.host }}-fullchain.crt"
      challenge: "{{ acme_challenge_type }}"
  register: acme_challenge

- name: Fulfill the challenge
  copy:
    dest: "/home/{{ parent_item.username }}/{{ parent_item.root_dir }}/{{ acme_challenge['challenge_data'][parent_item.host][acme_challenge_type]['resource'] }}"
    owner: "{{ parent_item.username }}"
    group: "{{ parent_item.username }}"
    mode: "0644"
    content: "{{ acme_challenge['challenge_data'][parent_item.host][acme_challenge_type]['resource_value'] }}"
  when: acme_challenge.changed == true and parent_item.host in acme_challenge['challenge_data']

- name: Let the challenge be validated and retrieve the cert and intermediate certificate
  community.crypto.acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    csr: "/etc/letsencrypt/csrs/{{ parent_item.host }}.csr"
    dest: "/etc/letsencrypt/certs/{{ parent_item.host }}.crt"
    fullchain_dest: "/etc/letsencrypt/certs/{{ parent_item.host }}-fullchain.crt"
    chain_dest: "/etc/letsencrypt/certs/{{ parent_item.host }}-intermediate.crt"
    data: "{{ acme_challenge }}"

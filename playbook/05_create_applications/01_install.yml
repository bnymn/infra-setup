- name: Check if CRT file exists
  stat:
    path: /etc/letsencrypt/certs/{{ parent_item.host }}-fullchain.crt
  register: crt_result

- name: Check if KEY file exists
  stat:
    path: /etc/letsencrypt/keys/{{ parent_item.host }}.key
  register: key_result

- name: Create nginx template without SSL
  template:
    src: ../../templates/nginx/nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ parent_item.host }}.conf
  when: not crt_result.stat.exists or not key_result.stat.exists

- name: Create nginx template with SSL
  template:
    src: ../../templates/nginx/nginx_with_ssl.conf.j2
    dest: /etc/nginx/sites-enabled/{{ parent_item.host }}.conf
  when: crt_result.stat.exists and key_result.stat.exists

- name: Create application directory
  file:
    path: "/home/{{ parent_item.username }}/{{ parent_item.root_dir }}/.well-known/acme-challenge"
    state: directory
    recurse: true
    owner: "{{ parent_item.username }}"
    group: "{{ parent_item.username }}"
    mode: "0755"

- name: Copy docker-compose file
  template:
    src: "../../templates/{{ parent_item.username }}/{{ parent_item.root_dir }}/docker-compose.yml.j2"
    dest: "/home/{{ parent_item.username }}/{{ parent_item.root_dir }}/docker-compose.yml"
    owner: "{{ parent_item.username }}"
    group: "{{ parent_item.username }}"
    mode: '0644'

- name: Start application services
  community.docker.docker_compose:
    project_src: "/home/{{ parent_item.username }}/{{ parent_item.root_dir }}"
    state: present
    pull: true
    remove_orphans: true
  vars:
    ansible_python_interpreter: /bin/python3

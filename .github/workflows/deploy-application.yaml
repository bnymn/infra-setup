name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Setup
    permissions: read-all
    steps:
      - name: Configuring ssh
        run: |
          eval `ssh-agent -s`
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cd ~/.ssh/
          pwd
          ls -lah
          ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
        env:
          SSH_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.NEWS_LB_HOST }}
          SSH_PORT: ${{ secrets.VM_SSH_PORT }}
      - uses: actions/checkout@v4
      - name: Run ansible
        run: |
          service ssh status
          ansible-playbook -vvv -i inventory.yml \
          --private-key ~/.ssh/id_rsa playbook/deploy-application.yaml \
          -e "docker_password=$ACCESS_TOKEN" \
          -e "docker_tag=$DOCKER_TAG" \
          -e "APP_KEY=${{ secrets.APP_KEY }}" \
          -e "DB_CONNECTION=${{ vars.DB_CONNECTION }}" \
          -e "DB_DATABASE=${{ vars.DB_DATABASE }}" \
          -e "DB_HOST=${{ vars.DB_HOST }}" \
          -e "DB_PORT=${{ vars.DB_PORT }}" \
          -e "DB_USERNAME=${{ vars.DB_USERNAME }}" \
          -e "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
          -e "LOG_CHANNEL=${{ vars.LOG_CHANNEL }}" \
          -e "APP_ENV=${{ vars.APP_ENV }}" \
          -e "APP_DEBUG=${{ vars.APP_DEBUG }}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_TAG: ${{ github.event.inputs.tag }}
